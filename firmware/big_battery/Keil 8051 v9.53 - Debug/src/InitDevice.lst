C51 COMPILER V9.53.0.0   INITDEVICE                                                        02/06/2019 17:42:47 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src/InitDevice.OBJ
COMPILER INVOKED BY: Z:\home\fitz\Downloads\SimplicityStudio_v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe /media/f
                    -itz/data/dropbox/projects/ee/big_battery/firmware/big_battery/src/InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) 
                    -WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SIZE) INTVECTOR(0X0000) INTPROMOTE INCDIR(/media/fitz/data/dropbox/projects/ee/
                    -big_battery/firmware/big_battery/inc;/home/fitz/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.1.5//Device/shared/
                    -si8051Base;/home/fitz/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.1.5//Device/EFM8BB1/inc) PRINT(.\src/InitDevi
                    -ce.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              WDT_0_enter_DefaultMode_from_RESET();
  25   1              PORTS_0_enter_DefaultMode_from_RESET();
  26   1              PBCFG_0_enter_DefaultMode_from_RESET();
  27   1              ADC_0_enter_DefaultMode_from_RESET();
  28   1              VREF_0_enter_DefaultMode_from_RESET();
  29   1              CLOCK_0_enter_DefaultMode_from_RESET();
  30   1              TIMER01_0_enter_DefaultMode_from_RESET();
  31   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  32   1              PCA_0_enter_DefaultMode_from_RESET();
  33   1              PCACH_0_enter_DefaultMode_from_RESET();
  34   1              PCACH_1_enter_DefaultMode_from_RESET();
  35   1              UART_0_enter_DefaultMode_from_RESET();
  36   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  37   1              // [Config Calls]$
  38   1      
  39   1      }
  40          
  41          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  42   1              // $[WDTCN - Watchdog Timer Control]
  43   1              //Disable Watchdog with key sequence
  44   1              WDTCN = 0xDE; //First key
  45   1              WDTCN = 0xAD; //Second key
  46   1              // [WDTCN - Watchdog Timer Control]$
  47   1      
  48   1      }
  49          
  50          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
  51   1              // $[XBR2 - Port I/O Crossbar 2]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        02/06/2019 17:42:47 PAGE 2   

  52   1              /***********************************************************************
  53   1               - Weak Pullups disabled
  54   1               - Crossbar enabled
  55   1               ***********************************************************************/
  56   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_DISABLED | XBR2_XBARE__ENABLED;
  57   1              // [XBR2 - Port I/O Crossbar 2]$
  58   1      
  59   1              // $[PRTDRV - Port Drive Strength]
  60   1              // [PRTDRV - Port Drive Strength]$
  61   1      
  62   1              // $[XBR0 - Port I/O Crossbar 0]
  63   1              /***********************************************************************
  64   1               - UART TX, RX routed to Port pins P0.4 and P0.5
  65   1               - SPI I/O unavailable at Port pins
  66   1               - SMBus 0 I/O unavailable at Port pins
  67   1               - CP0 unavailable at Port pin
  68   1               - Asynchronous CP0 unavailable at Port pin
  69   1               - CP1 unavailable at Port pin
  70   1               - Asynchronous CP1 unavailable at Port pin
  71   1               - SYSCLK unavailable at Port pin
  72   1               ***********************************************************************/
  73   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__DISABLED
  74   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
  75   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
  76   1              // [XBR0 - Port I/O Crossbar 0]$
  77   1      
  78   1              // $[XBR1 - Port I/O Crossbar 1]
  79   1              /***********************************************************************
  80   1               - CEX0, CEX1 routed to Port pins
  81   1               - ECI unavailable at Port pin
  82   1               - T0 unavailable at Port pin
  83   1               - T1 unavailable at Port pin
  84   1               - T2 unavailable at Port pin
  85   1               ***********************************************************************/
  86   1              XBR1 = XBR1_PCA0ME__CEX0_CEX1 | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
  87   1                              | XBR1_T1E__DISABLED | XBR1_T2E__DISABLED;
  88   1              // [XBR1 - Port I/O Crossbar 1]$
  89   1      
  90   1      }
  91          
  92          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
  93   1              // $[CLKSEL - Clock Select]
  94   1              /***********************************************************************
  95   1               - Clock derived from the Internal High-Frequency Oscillator
  96   1               - SYSCLK is equal to selected clock source divided by 1
  97   1               ***********************************************************************/
  98   1              CLKSEL = CLKSEL_CLKSL__HFOSC | CLKSEL_CLKDIV__SYSCLK_DIV_1;
  99   1              // [CLKSEL - Clock Select]$
 100   1      
 101   1      }
 102          
 103          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 104   1              // $[Timer Initialization]
 105   1              //Save Timer Configuration
 106   1              uint8_t TCON_save;
 107   1              TCON_save = TCON;
 108   1              //Stop Timers
 109   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 110   1      
 111   1              // [Timer Initialization]$
 112   1      
 113   1              // $[TH0 - Timer 0 High Byte]
 114   1              // [TH0 - Timer 0 High Byte]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        02/06/2019 17:42:47 PAGE 3   

 115   1      
 116   1              // $[TL0 - Timer 0 Low Byte]
 117   1              // [TL0 - Timer 0 Low Byte]$
 118   1      
 119   1              // $[TH1 - Timer 1 High Byte]
 120   1              /***********************************************************************
 121   1               - Timer 1 High Byte = 0x2B
 122   1               ***********************************************************************/
 123   1              TH1 = (0x2B << TH1_TH1__SHIFT);
 124   1              // [TH1 - Timer 1 High Byte]$
 125   1      
 126   1              // $[TL1 - Timer 1 Low Byte]
 127   1              // [TL1 - Timer 1 Low Byte]$
 128   1      
 129   1              // $[Timer Restoration]
 130   1              //Restore Timer Configuration
 131   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 132   1      
 133   1              // [Timer Restoration]$
 134   1      
 135   1      }
 136          
 137          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 138   1              // $[CKCON0 - Clock Control 0]
 139   1              // [CKCON0 - Clock Control 0]$
 140   1      
 141   1              // $[TMOD - Timer 0/1 Mode]
 142   1              /***********************************************************************
 143   1               - Mode 0, 13-bit Counter/Timer
 144   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 145   1               - Timer Mode
 146   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 147   1               - Timer Mode
 148   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 149   1               ***********************************************************************/
 150   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 151   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 152   1              // [TMOD - Timer 0/1 Mode]$
 153   1      
 154   1              // $[TCON - Timer 0/1 Control]
 155   1              /***********************************************************************
 156   1               - Start Timer 1 running
 157   1               ***********************************************************************/
 158   1              TCON |= TCON_TR1__RUN;
 159   1              // [TCON - Timer 0/1 Control]$
 160   1      
 161   1      }
 162          
 163          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 164   1              // $[SCON0 - UART0 Serial Port Control]
 165   1              /***********************************************************************
 166   1               - UART0 reception enabled
 167   1               ***********************************************************************/
 168   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 169   1              // [SCON0 - UART0 Serial Port Control]$
 170   1      
 171   1      }
 172          
 173          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 174   1              // $[EIE1 - Extended Interrupt Enable 1]
 175   1              // [EIE1 - Extended Interrupt Enable 1]$
 176   1      
 177   1              // $[EIP1 - Extended Interrupt Priority 1]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        02/06/2019 17:42:47 PAGE 4   

 178   1              // [EIP1 - Extended Interrupt Priority 1]$
 179   1      
 180   1              // $[IE - Interrupt Enable]
 181   1              /***********************************************************************
 182   1               - Enable each interrupt according to its individual mask setting
 183   1               - Disable external interrupt 0
 184   1               - Disable external interrupt 1
 185   1               - Disable all SPI0 interrupts
 186   1               - Disable all Timer 0 interrupt
 187   1               - Disable all Timer 1 interrupt
 188   1               - Disable Timer 2 interrupt
 189   1               - Enable UART0 interrupt
 190   1               ***********************************************************************/
 191   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 192   1                              | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 193   1                              | IE_ET2__DISABLED | IE_ES0__ENABLED;
 194   1              // [IE - Interrupt Enable]$
 195   1      
 196   1              // $[IP - Interrupt Priority]
 197   1              // [IP - Interrupt Priority]$
 198   1      
 199   1      }
 200          
 201          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
 202   1              // $[P0 - Port 0 Pin Latch]
 203   1              // [P0 - Port 0 Pin Latch]$
 204   1      
 205   1              // $[P0MDOUT - Port 0 Output Mode]
 206   1              /***********************************************************************
 207   1               - P0.0 output is open-drain
 208   1               - P0.1 output is open-drain
 209   1               - P0.2 output is push-pull
 210   1               - P0.3 output is push-pull
 211   1               - P0.4 output is push-pull
 212   1               - P0.5 output is open-drain
 213   1               - P0.6 output is push-pull
 214   1               - P0.7 output is push-pull
 215   1               ***********************************************************************/
 216   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 217   1                              | P0MDOUT_B2__PUSH_PULL | P0MDOUT_B3__PUSH_PULL
 218   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
 219   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__PUSH_PULL;
 220   1              // [P0MDOUT - Port 0 Output Mode]$
 221   1      
 222   1              // $[P0MDIN - Port 0 Input Mode]
 223   1              /***********************************************************************
 224   1               - P0.0 pin is configured for analog mode
 225   1               - P0.1 pin is configured for analog mode
 226   1               - P0.2 pin is configured for digital mode
 227   1               - P0.3 pin is configured for digital mode
 228   1               - P0.4 pin is configured for digital mode
 229   1               - P0.5 pin is configured for digital mode
 230   1               - P0.6 pin is configured for digital mode
 231   1               - P0.7 pin is configured for digital mode
 232   1               ***********************************************************************/
 233   1              P0MDIN = P0MDIN_B0__ANALOG | P0MDIN_B1__ANALOG | P0MDIN_B2__DIGITAL
 234   1                              | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 235   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
 236   1              // [P0MDIN - Port 0 Input Mode]$
 237   1      
 238   1              // $[P0SKIP - Port 0 Skip]
 239   1              /***********************************************************************
 240   1               - P0.0 pin is skipped by the crossbar
C51 COMPILER V9.53.0.0   INITDEVICE                                                        02/06/2019 17:42:47 PAGE 5   

 241   1               - P0.1 pin is skipped by the crossbar
 242   1               - P0.2 pin is skipped by the crossbar
 243   1               - P0.3 pin is not skipped by the crossbar
 244   1               - P0.4 pin is not skipped by the crossbar
 245   1               - P0.5 pin is not skipped by the crossbar
 246   1               - P0.6 pin is not skipped by the crossbar
 247   1               - P0.7 pin is not skipped by the crossbar
 248   1               ***********************************************************************/
 249   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 250   1                              | P0SKIP_B3__NOT_SKIPPED | P0SKIP_B4__NOT_SKIPPED
 251   1                              | P0SKIP_B5__NOT_SKIPPED | P0SKIP_B6__NOT_SKIPPED
 252   1                              | P0SKIP_B7__NOT_SKIPPED;
 253   1              // [P0SKIP - Port 0 Skip]$
 254   1      
 255   1              // $[P0MASK - Port 0 Mask]
 256   1              // [P0MASK - Port 0 Mask]$
 257   1      
 258   1              // $[P0MAT - Port 0 Match]
 259   1              // [P0MAT - Port 0 Match]$
 260   1      
 261   1      }
 262          
 263          extern void PCA_0_enter_DefaultMode_from_RESET(void) {
 264   1              // $[PCA Off]
 265   1              PCA0CN0_CR = PCA0CN0_CR__STOP;
 266   1              // [PCA Off]$
 267   1      
 268   1              // $[PCA0MD - PCA Mode]
 269   1              /***********************************************************************
 270   1               - PCA continues to function normally while the system controller is in
 271   1               Idle Mode
 272   1               - Disable the CF interrupt
 273   1               - System clock
 274   1               ***********************************************************************/
 275   1              PCA0MD = PCA0MD_CIDL__NORMAL | PCA0MD_ECF__OVF_INT_DISABLED
 276   1                              | PCA0MD_CPS__SYSCLK;
 277   1              // [PCA0MD - PCA Mode]$
 278   1      
 279   1              // $[PCA0CENT - PCA Center Alignment Enable]
 280   1              // [PCA0CENT - PCA Center Alignment Enable]$
 281   1      
 282   1              // $[PCA0CLR - PCA Comparator Clear Control]
 283   1              // [PCA0CLR - PCA Comparator Clear Control]$
 284   1      
 285   1              // $[PCA0L - PCA Counter/Timer Low Byte]
 286   1              // [PCA0L - PCA Counter/Timer Low Byte]$
 287   1      
 288   1              // $[PCA0H - PCA Counter/Timer High Byte]
 289   1              // [PCA0H - PCA Counter/Timer High Byte]$
 290   1      
 291   1              // $[PCA0POL - PCA Output Polarity]
 292   1              // [PCA0POL - PCA Output Polarity]$
 293   1      
 294   1              // $[PCA0PWM - PCA PWM Configuration]
 295   1              /***********************************************************************
 296   1               - 11 bits
 297   1               ***********************************************************************/
 298   1              PCA0PWM &= ~PCA0PWM_CLSEL__FMASK;
 299   1              PCA0PWM |= PCA0PWM_CLSEL__11_BITS;
 300   1              // [PCA0PWM - PCA PWM Configuration]$
 301   1      
 302   1              // $[PCA On]
 303   1              PCA0CN0_CR = PCA0CN0_CR__RUN;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        02/06/2019 17:42:47 PAGE 6   

 304   1              // [PCA On]$
 305   1      
 306   1      }
 307          
 308          extern void PCACH_0_enter_DefaultMode_from_RESET(void) {
 309   1              // $[PCA0 Settings Save]
 310   1              // Select Capture/Compare register)
 311   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 312   1              // [PCA0 Settings Save]$
 313   1      
 314   1              // $[PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]
 315   1              /***********************************************************************
 316   1               - Disable negative edge capture
 317   1               - Disable CCF0 interrupts
 318   1               - Disable match function
 319   1               - 8 to 11-bit PWM selected
 320   1               - Disable positive edge capture
 321   1               - Enable comparator function
 322   1               - Enable PWM function
 323   1               - Disable toggle function
 324   1               ***********************************************************************/
 325   1              PCA0CPM0 = PCA0CPM0_CAPN__DISABLED | PCA0CPM0_ECCF__DISABLED
 326   1                              | PCA0CPM0_MAT__DISABLED | PCA0CPM0_PWM16__8_BIT
 327   1                              | PCA0CPM0_CAPP__DISABLED | PCA0CPM0_ECOM__ENABLED
 328   1                              | PCA0CPM0_PWM__ENABLED | PCA0CPM0_TOG__DISABLED;
 329   1              // [PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]$
 330   1      
 331   1              // $[PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]
 332   1              // [PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]$
 333   1      
 334   1              // $[PCA0CPH0 - PCA Channel 0 Capture Module High Byte]
 335   1              // [PCA0CPH0 - PCA Channel 0 Capture Module High Byte]$
 336   1      
 337   1              // $[Auto-reload]
 338   1              PCA0PWM |= PCA0PWM_ARSEL__AUTORELOAD;
 339   1      
 340   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 341   1              // [Auto-reload]$
 342   1      
 343   1              // $[PCA0 Settings Restore]
 344   1              // [PCA0 Settings Restore]$
 345   1      
 346   1      }
 347          
 348          extern void PCACH_1_enter_DefaultMode_from_RESET(void) {
 349   1              // $[PCA0 Settings Save]
 350   1              // Select Capture/Compare register)
 351   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 352   1              // [PCA0 Settings Save]$
 353   1      
 354   1              // $[PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]
 355   1              /***********************************************************************
 356   1               - Disable negative edge capture
 357   1               - Disable CCF1 interrupts
 358   1               - Disable match function
 359   1               - 8 to 11-bit PWM selected
 360   1               - Disable positive edge capture
 361   1               - Enable comparator function
 362   1               - Enable PWM function
 363   1               - Disable toggle function
 364   1               ***********************************************************************/
 365   1              PCA0CPM1 = PCA0CPM1_CAPN__DISABLED | PCA0CPM1_ECCF__DISABLED
 366   1                              | PCA0CPM1_MAT__DISABLED | PCA0CPM1_PWM16__8_BIT
C51 COMPILER V9.53.0.0   INITDEVICE                                                        02/06/2019 17:42:47 PAGE 7   

 367   1                              | PCA0CPM1_CAPP__DISABLED | PCA0CPM1_ECOM__ENABLED
 368   1                              | PCA0CPM1_PWM__ENABLED | PCA0CPM1_TOG__DISABLED;
 369   1              // [PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]$
 370   1      
 371   1              // $[PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]
 372   1              // [PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]$
 373   1      
 374   1              // $[PCA0CPH1 - PCA Channel 1 Capture Module High Byte]
 375   1              // [PCA0CPH1 - PCA Channel 1 Capture Module High Byte]$
 376   1      
 377   1              // $[Auto-reload]
 378   1              PCA0PWM |= PCA0PWM_ARSEL__AUTORELOAD;
 379   1      
 380   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 381   1              // [Auto-reload]$
 382   1      
 383   1              // $[PCA0 Settings Restore]
 384   1              // [PCA0 Settings Restore]$
 385   1      
 386   1      }
 387          
 388          extern void PCACH_2_enter_DefaultMode_from_RESET(void) {
 389   1              // $[PCA0 Settings Save]
 390   1              // Select Capture/Compare register)
 391   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 392   1              // [PCA0 Settings Save]$
 393   1      
 394   1              // $[PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]
 395   1              /***********************************************************************
 396   1               - Disable negative edge capture
 397   1               - Disable CCF2 interrupts
 398   1               - Disable match function
 399   1               - 16-bit PWM selected
 400   1               - Disable positive edge capture
 401   1               - Enable comparator function
 402   1               - Enable PWM function
 403   1               - Disable toggle function
 404   1               ***********************************************************************/
 405   1              PCA0CPM2 = PCA0CPM2_CAPN__DISABLED | PCA0CPM2_ECCF__DISABLED
 406   1                              | PCA0CPM2_MAT__DISABLED | PCA0CPM2_PWM16__16_BIT
 407   1                              | PCA0CPM2_CAPP__DISABLED | PCA0CPM2_ECOM__ENABLED
 408   1                              | PCA0CPM2_PWM__ENABLED | PCA0CPM2_TOG__DISABLED;
 409   1              // [PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]$
 410   1      
 411   1              // $[PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]
 412   1              // [PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]$
 413   1      
 414   1              // $[PCA0CPH2 - PCA Channel 2 Capture Module High Byte]
 415   1              // [PCA0CPH2 - PCA Channel 2 Capture Module High Byte]$
 416   1      
 417   1              // $[Auto-reload]
 418   1              // [Auto-reload]$
 419   1      
 420   1              // $[PCA0 Settings Restore]
 421   1              // [PCA0 Settings Restore]$
 422   1      
 423   1      }
 424          
 425          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 426   1              // $[ADC0CN1 - ADC0 Control 1]
 427   1              // [ADC0CN1 - ADC0 Control 1]$
 428   1      
 429   1              // $[ADC0MX - ADC0 Multiplexer Selection]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        02/06/2019 17:42:47 PAGE 8   

 430   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 431   1      
 432   1              // $[ADC0CF - ADC0 Configuration]
 433   1              /***********************************************************************
 434   1               - SAR Clock Divider = 0x1F
 435   1               - ADC0 operates in 10-bit or 12-bit mode 
 436   1               - The on-chip PGA gain is 1
 437   1               - Normal Track Mode
 438   1               ***********************************************************************/
 439   1              ADC0CF = (0x1F << ADC0CF_ADSC__SHIFT) | ADC0CF_AD8BE__NORMAL
 440   1                              | ADC0CF_ADGN__GAIN_1 | ADC0CF_ADTM__TRACK_NORMAL;
 441   1              // [ADC0CF - ADC0 Configuration]$
 442   1      
 443   1              // $[ADC0AC - ADC0 Accumulator Configuration]
 444   1              /***********************************************************************
 445   1               - Right justified. No shifting applied
 446   1               - Enable 12-bit mode
 447   1               - ADC0H:ADC0L contain the result of the latest conversion when Burst
 448   1               Mode is disabled
 449   1               - Perform and Accumulate 64 conversions 
 450   1               ***********************************************************************/
 451   1              ADC0AC = ADC0AC_ADSJST__RIGHT_NO_SHIFT | ADC0AC_AD12BE__12_BIT_ENABLED
 452   1                              | ADC0AC_ADAE__ACC_DISABLED | ADC0AC_ADRPT__ACC_64;
 453   1              // [ADC0AC - ADC0 Accumulator Configuration]$
 454   1      
 455   1              // $[ADC0TK - ADC0 Burst Mode Track Time]
 456   1              // [ADC0TK - ADC0 Burst Mode Track Time]$
 457   1      
 458   1              // $[ADC0PWR - ADC0 Power Control]
 459   1              // [ADC0PWR - ADC0 Power Control]$
 460   1      
 461   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 462   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 463   1      
 464   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 465   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 466   1      
 467   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 468   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 469   1      
 470   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 471   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 472   1      
 473   1              // $[ADC0CN0 - ADC0 Control 0]
 474   1              /***********************************************************************
 475   1               - Enable ADC0 burst mode
 476   1               ***********************************************************************/
 477   1              ADC0CN0 |= ADC0CN0_ADBMEN__BURST_ENABLED;
 478   1              // [ADC0CN0 - ADC0 Control 0]$
 479   1      
 480   1      }
 481          
 482          extern void VREF_0_enter_DefaultMode_from_RESET(void) {
 483   1              // $[REF0CN - Voltage Reference Control]
 484   1              /***********************************************************************
 485   1               - Enable the Temperature Sensor
 486   1               - The ADC0 ground reference is the GND pin
 487   1               - The internal reference operates at 2.4 V nominal
 488   1               - The ADC0 voltage reference is the internal voltage reference
 489   1               ***********************************************************************/
 490   1              REF0CN = REF0CN_TEMPE__TEMP_ENABLED | REF0CN_GNDSL__GND_PIN
 491   1                              | REF0CN_IREFLVL__2P4 | REF0CN_REFSL__INTERNAL_VREF;
 492   1              // [REF0CN - Voltage Reference Control]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        02/06/2019 17:42:47 PAGE 9   

 493   1      
 494   1      }
 495          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    165    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
