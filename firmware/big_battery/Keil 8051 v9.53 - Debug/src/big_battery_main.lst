C51 COMPILER V9.53.0.0   BIG_BATTERY_MAIN                                                  12/10/2018 23:39:01 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE BIG_BATTERY_MAIN
OBJECT MODULE PLACED IN .\src/big_battery_main.OBJ
COMPILER INVOKED BY: Z:\home\fitz\Downloads\SimplicityStudio_v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe /media/f
                    -itz/data/dropbox/projects/ee/big_battery/firmware/big_battery/src/big_battery_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(L
                    -ARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SIZE) INTVECTOR(0X0000) INTPROMOTE INCDIR(/media/fitz/data/dropbox/projec
                    -ts/ee/big_battery/firmware/big_battery/inc;/home/fitz/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.1.5//Device/s
                    -hared/si8051Base;/home/fitz/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.1.5//Device/EFM8BB1/inc) PRINT(.\src/bi
                    -g_battery_main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/big_battery_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/big_battery_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8BB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          // $[Generated Includes]
  15          // [Generated Includes]$
  16          
  17          
  18          
  19          //-----------------------------------------------------------------------------
  20          // Externs
  21          //-----------------------------------------------------------------------------
  22          extern uint8_t TX_BUFFER[UART_BUFFERSIZE];
  23          extern uint8_t RX_BUFFER[UART_BUFFERSIZE];
  24          extern uint8_t TX_index;
  25          extern uint8_t TX_size;
  26          extern uint8_t RX_size;
  27          extern uint8_t UART_Output_First;
  28          extern uint8_t TX_Ready;
  29          extern uint8_t Byte;
  30          
  31          
  32          void uart_write(char * buf);
  33          
  34          //-----------------------------------------------------------------------------
  35          // SiLabs_Startup() Routine
  36          // ----------------------------------------------------------------------------
  37          // This function is called immediately after reset, before the initialization
  38          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  39          // useful place to disable the watchdog timer, which is enable by default
  40          // and may trigger before main() in some instances.
  41          //-----------------------------------------------------------------------------
  42          void SiLabs_Startup (void)
  43          {
  44   1        // $[SiLabs Startup]
  45   1        // [SiLabs Startup]$
  46   1      }
  47          
  48          //-----------------------------------------------------------------------------
  49          // main() Routine
  50          // ----------------------------------------------------------------------------
  51          int main (void) {
C51 COMPILER V9.53.0.0   BIG_BATTERY_MAIN                                                  12/10/2018 23:39:01 PAGE 2   

  52   1              // Call hardware initialization routine
  53   1              enter_DefaultMode_from_RESET();
  54   1      
  55   1              while(1) {
  56   2              // $[Generated Run-time code]
  57   2              // [Generated Run-time code]$
  58   2                      uart_write("this is a test");
  59   2                      while(!TX_Ready);
  60   2              }
  61   1      }
  62          
  63          
  64          void uart_write(char * buf) {
  65   1              TX_Ready = 0;
  66   1              TX_size = 0;
  67   1              while((buf[TX_size] != '\n') && (TX_size < UART_BUFFERSIZE)) {
  68   2                      TX_BUFFER[TX_size] = buf[TX_size];
  69   2                      TX_size++;
  70   2              }
  71   1              SBUF0 = TX_BUFFER[0];
  72   1      }
  73          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     72    ----
   CONSTANT SIZE    =     15    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
